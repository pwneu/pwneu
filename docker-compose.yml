services:
  api:
    container_name: api
    depends_on:
      postgres:
        condition: service_healthy
      loki:
        condition: service_healthy
    build:
      context: .
      dockerfile: src/Pwneu.Api/Dockerfile
    ports:
      - "37100:8080"
    environment:
      - ASPNETCORE_HTTP_PORTS=8080
      - ConnectionStrings__pwneudb=${POSTGRES_CONNECTION}
      - AppOptions__IsArchiveMode=${IS_ARCHIVE_MODE}
      - AppOptions__InitialAdminPassword=${ADMIN_PASSWORD}
      - AppOptions__ValidEmailDomain=${VALID_EMAIL_DOMAIN}
      - AppOptions__TurnstileSecretKey=${TURNSTILE_SECRET_KEY}
      - AppOptions__IsTurnstileEnabled=${IS_TURNSTILE_ENABLED}
      - AppOptions__ResetPasswordUrl=${RESET_PASSWORD_URL}
      - AppOptions__MaxFailedIpAddressAttemptCount=${MAX_FAILED_IP_ADDRESS_ATTEMPT_COUNT}
      - AppOptions__MaxFailedUserAttemptCount=${MAX_FAILED_USER_ATTEMPT_COUNT}
      - AppOptions__Flag=${FLAG}
      - AppOptions__AutoMigrate=${AUTO_MIGRATE}
      - ChatOptions__ConversationIsEnabled=${CHAT_CONVERSATION_IS_ENABLED}
      - ChatOptions__MaxConversationsPerDay=${CHAT_MAX_CONVERSATIONS_PER_DAY}
      - ChatOptions__OpenAIApiKey=${CHAT_OPENAI_API_KEY}
      - SmtpOptions__SenderAddress=${SMTP_SENDER_ADDRESS}
      - SmtpOptions__SenderPassword=${SMTP_SENDER_PASSWORD}
      - SmtpOptions__Host=${SMTP_HOST}
      - SmtpOptions__Port=${SMTP_PORT}
      - SmtpOptions__EnableSsl=${SMTP_ENABLE_SSL}
      - SmtpOptions__NotifyLoginIsEnabled=${SMTP_NOTIFY_LOGIN_IS_ENABLED}
      - SmtpOptions__SendEmailConfirmationIsEnabled=${SMTP_SEND_EMAIL_CONFIRMATION_IS_ENABLED}
      - SmtpOptions__SendPasswordResetTokenIsEnabled=${SMTP_SEND_PASSWORD_RESET_TOKEN_IS_ENABLED}
      - SmtpOptions__VerifyEmailUrl=${SMTP_VERIFY_EMAIL_URL}
      - SmtpOptions__ResetPasswordUrl=${SMTP_RESET_PASSWORD_URL}
      - SmtpOptions__WebsiteUrl=${SMTP_WEBSITE_URL}
      - SmtpOptions__LogoUrl=${SMTP_LOGO_URL}
      - JwtOptions__Issuer=${JWT_ISSUER}
      - JwtOptions__Audience=${JWT_AUDIENCE}
      - JwtOptions__SigningKey=${JWT_SIGNING_KEY}
      - JwtOptions__RefreshTokenSigningKey=${JWT_REFRESH_TOKEN_SIGNING_KEY}
    # healthcheck:
    #   test: ["CMD-SHELL", "curl --fail http://localhost:8080/health || exit 1"]
    #   interval: 5s
    #   timeout: 5s
    #   retries: 10
    networks:
      - pwneu

  postgres:
    image: postgres:17
    container_name: postgres
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - ./.containers/postgresql:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - pwneu

  loki:
    image: grafana/loki:latest
    container_name: loki
    command: -config.file=/etc/loki/local-config.yaml
    healthcheck:
      test: wget -q --tries=1 -O- http://localhost:3100/ready
      interval: 3s
      timeout: 3s
      retries: 10
      start_period: 10s
    networks:
      - pwneu

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    depends_on:
      api:
        condition: service_started
    volumes:
      - ./conf/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./.containers/prometheus:/prometheus
    networks:
      - pwneu

  grafana:
    image: grafana/grafana-oss:11.4.0
    container_name: grafana
    depends_on:
      loki:
        condition: service_healthy
      prometheus:
        condition: service_started
    ports:
      - "37004:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
      - GF_RENDERING_SERVER_URL=http://grafana-image-renderer:8081/render
      - GF_RENDERING_CALLBACK_URL=http://grafana:37004/
      - GF_LOG_FILTERS=grafana-image-renderer:debug
    volumes:
      - ./conf/datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml:ro
      - ./.containers/grafana:/var/lib/grafana
    networks:
      - pwneu

  grafana-image-renderer:
    image: grafana/grafana-image-renderer:latest
    container_name: grafana-image-renderer
    networks:
      - pwneu

networks:
  pwneu:
